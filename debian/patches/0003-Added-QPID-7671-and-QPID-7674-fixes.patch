From: Irina Boverman <iboverma@redhat.com>
Date: Thu, 16 Feb 2017 11:49:34 -0500
Subject: Added QPID-7671 and QPID-7674 fixes

---
 CMakeLists.txt                     |  7 ++++++-
 src/qpid/log/Logger.cpp            | 20 ++++++++------------
 src/qpid/sys/posix/Mutex.h         |  2 +-
 src/qpid/sys/windows/Mutex.h       |  2 +-
 src/qpid/sys/windows/WinSocket.cpp |  1 -
 5 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0d0a44f..5b1d536 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -142,7 +142,12 @@ if (CMAKE_CXX_COMPILER_ID STREQUAL GNU)
    # -Wunreachable-code -Wpadded -Winline
    # -Wshadow - warns about boost headers.
    set (WARNING_FLAGS
-        "-Werror -pedantic -Wall -Wextra -Wno-shadow -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wvolatile-register-var -Winvalid-pch -Wno-system-headers -Woverloaded-virtual -Wno-error=deprecated-declarations")
+     "-Werror -pedantic -Wall -Wextra -Wno-shadow -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wvolatile-register-var -Winvalid-pch -Wno-system-headers -Woverloaded-virtual -Wno-error=deprecated-declarations")
+
+   if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7)
+     message("FIXME FLAGGING")
+     set(WARNING_FLAGS "${WARNING_FLAGS} -Wno-implicit-fallthrough")
+   endif()
 
    set (CATCH_UNDEFINED "-Wl,--no-undefined")
    # gcc on SunOS uses native linker whose "-z defs" is too fussy
diff --git a/src/qpid/log/Logger.cpp b/src/qpid/log/Logger.cpp
index fc254f2..c480eeb 100644
--- a/src/qpid/log/Logger.cpp
+++ b/src/qpid/log/Logger.cpp
@@ -24,13 +24,6 @@
 #include "qpid/sys/Time.h"
 #include "qpid/DisableExceptionLogging.h"
 
-#include "boost/version.hpp"
-#if (BOOST_VERSION >= 104000)
-#include <boost/serialization/singleton.hpp>
-#else
-#include <boost/pool/detail/singleton.hpp>
-#endif
-
 #include <boost/bind.hpp>
 #include <boost/function.hpp>
 #include <algorithm>
@@ -51,12 +44,15 @@ inline void Logger::enable_unlocked(Statement* s) {
     s->enabled=selector.isEnabled(s->level, s->function, s->category);
 }
 
+namespace {
+sys::PODMutex loggerLock = QPID_MUTEX_INITIALIZER;
+std::auto_ptr<Logger> logger;
+}
+
 Logger& Logger::instance() {
-#if (BOOST_VERSION >= 104000)
-    return boost::serialization::singleton<Logger>::get_mutable_instance();
-#else
-    return boost::details::pool::singleton_default<Logger>::instance();
-#endif
+    sys::PODMutex::ScopedLock l(loggerLock);
+    if (!logger.get()) logger.reset(new Logger);
+    return *logger;
 }
 
 Logger::Logger() : flags(0) {
diff --git a/src/qpid/sys/posix/Mutex.h b/src/qpid/sys/posix/Mutex.h
index e2b21b5..5d3cfb2 100644
--- a/src/qpid/sys/posix/Mutex.h
+++ b/src/qpid/sys/posix/Mutex.h
@@ -76,7 +76,7 @@ protected:
 
 /**
  * PODMutex is a POD, can be static-initialized with
- * PODMutex m = QPID_PODMUTEX_INITIALIZER
+ * PODMutex m = QPID_MUTEX_INITIALIZER
  */
 struct PODMutex
 {
diff --git a/src/qpid/sys/windows/Mutex.h b/src/qpid/sys/windows/Mutex.h
index 5dcc69e..1bd88c4 100755
--- a/src/qpid/sys/windows/Mutex.h
+++ b/src/qpid/sys/windows/Mutex.h
@@ -86,7 +86,7 @@ protected:
 
 /**
  * PODMutex is a POD, can be static-initialized with
- * PODMutex m = QPID_PODMUTEX_INITIALIZER
+ * PODMutex m = QPID_MUTEX_INITIALIZER
  */
 struct PODMutex 
 {
diff --git a/src/qpid/sys/windows/WinSocket.cpp b/src/qpid/sys/windows/WinSocket.cpp
index aada990..2af0383 100644
--- a/src/qpid/sys/windows/WinSocket.cpp
+++ b/src/qpid/sys/windows/WinSocket.cpp
@@ -44,7 +44,6 @@ namespace {
 static LONG volatile initialized = 0;
 
 class WinSockSetup {
-    //  : public boost::details::pool::singleton_default<WinSockSetup> {
 
 public:
     WinSockSetup() {
